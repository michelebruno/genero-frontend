@use "sass:map" as *;

@tailwind base;
@tailwind components;
@tailwind utilities;

$screens: "sm", "md", "lg", "xl", "2xl";

$variables: (
        'spacing': (
                "outsides": (
                        "default": "24px",
                        "xl":"50px"
                ),
                "sm": (
                        "default": "12px",
                        "md":"15px"
                ),
                "md": (
                        "default": "16px",
                        "md":"30px"
                ),
                "lg": (
                        "default": "18px",
                        "md":"60px"
                ),
                "step": (
                        "default" :"80vh"
                )
        ),
        'colors': (
                "primary": (
                        "default": "rgba(25, 101, 254, var(--tw-bg-opacity, 1))",
                ),
                "primary-light": (
                        "default": "rgba(255 247 245 / var(--tw-bg-opacity, 1))",
                ),
        ),
        'drop-shadow': (
                "block-xs" : (
                        "default": "3px 3px 0 var(--tw-shadow-color)"
                ),
                "block-sm" : (
                        "default": "4px 4px 0 var(--tw-shadow-color)"
                ),
                "block-md" : (
                        "default": "6px 6px 0 var(--tw-shadow-color)"
                ),
                "block-lg" : (
                        "default": "12px 12px 0 var(--tw-shadow-color)"
                ),
        ),
        "font-size": (
                "sm" : (
                        "default": "14px"
                ),
                "lead" : (
                        "default": "24px"
                ),
                "display-1" : (
                        "default": "80px",
                        "2xl": "120px",
                ),
                "display-2" : (
                        "default": "50px",
                        "2xl": "66px",
                ),
        ),
        'transition-duration' : (
                "default": (
                        "default": 500ms
                )
        )
);


@layer base {

  @font-face {
    font-family: "Satoshi Variable";
    src: local("Satoshi Variable"),
    url("~/assets/fonts/Satoshi-Variable.eot") format("eot"),
    url("~/assets/fonts/Satoshi-Variable.ttf") format("truetype"),
    url("~/assets/fonts/Satoshi-Variable.woff2") format("woff2"),
    url("~/assets/fonts/Satoshi-Variable.woff") format("woff");
  }

  @font-face {
    font-family: "Satoshi Variable";
    font-style: italic;
    src: local("Satoshi Variable"),
    url("~/assets/fonts/Satoshi-VariableItalic.eot") format("eot"),
    url("~/assets/fonts/Satoshi-VariableItalic.ttf") format("truetype"),
    url("~/assets/fonts/Satoshi-VariableItalic.woff2") format("woff2"),
    url("~/assets/fonts/Satoshi-VariableItalic.woff") format("woff");
  }
  @font-face {
    font-family: "PP Neue Montreal";
    src: local("PP Neue Montreal"),
    url("~/assets/fonts/PPNeueMontreal-Variable.ttf") format("truetype"),
    url("~/assets/fonts/PPNeueMontreal-Variable.woff2") format("woff2"),
  }

  @font-face {
    font-family: "PP Neue Montreal";
    font-style: italic;
    src: local("PP Neue Montreal"),
    url("~/assets/fonts/PPNeueMontreal-Italic.ttf") format("truetype"),
    url("~/assets/fonts/PPNeueMontreal-Italic.woff2") format("woff2"),
  }
  @font-face {
    font-family: "PP NeueBit";
    src: //local("PP NeueBit"),
            url("~/assets/fonts/PPNeueBit-Regular.woff") format("woff"),
  }
  @font-face {
    font-family: "PP NeueBit";
    font-weight: bold;
    src: local("PP NeueBit"),
    url("~/assets/fonts/PPNeueBit-Bold.otf") format("otf"),
    url("~/assets/fonts/PPNeueBit-Bold.woff") format("woff");
  }


  *, ::before, ::after {

    @each $property, $variants in $variables {

      @each $variant, $values in $variants {
        --#{$property}-#{$variant}: #{get($values, "default")};

        @each $breakpoint in $screens {

          @if has-key($values, $breakpoint) {
            @screen #{$breakpoint} {
              --#{$property}-#{$variant}: #{get($values, $breakpoint)}
            }
          }
        }

      }
    }

  }

}


@layer utilities {
  .box {
    @apply bg-white border-2 px-sm drop-shadow-block-md shadow-primary hover:drop-shadow-block-sm active:drop-shadow-block-xs;

    &-lg {
      @apply transition-all bg-white border-2 px-sm drop-shadow-block-lg shadow-primary hover:drop-shadow-block-md active:drop-shadow-block-sm;

    }
  }

  /* Enter and leave animations can use different */
  /* durations and timing functions.              */
  .slide-fade-enter-active {
    transition: all .3s ease;
  }

  .slide-fade-enter-active {
    transition: all 0.3s ease-out;
  }

  .slide-fade-leave-active {
    transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);
  }

  .slide-fade-enter-from,
  .slide-fade-leave-to {
    transform: translateX(20px);
    opacity: 0;
  }
}

